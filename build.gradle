plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.gdgoc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT 관련 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

//spotless {
//	java {
//		importOrder(
//				'java|javax|jakarta',
//				'org.springframework',
//				'lombok',
//				'',
//				'org.junit|org.mockito',
//				'\\#',
//				'\\#org.junit'
//		)
//
//		googleJavaFormat()
//		formatAnnotations()
//		removeUnusedImports()
//		trimTrailingWhitespace()
//		endWithNewline()
//	}
//}

tasks.register("updateGitHooks", Copy) {
	from "./scripts/pre-commit"
	into ".git/hooks"
	onlyIf {
		System.getenv("NO_GIT_HOOKS") == "true"
	}
}
tasks.register("executableGitHooks", Exec) {
	commandLine "chmod", "ug+x", ".git/hooks/pre-commit"
	dependsOn(updateGitHooks)
	onlyIf {
		System.getenv("NO_GIT_HOOKS") == "true"
	}
}
compileJava.dependsOn(executableGitHooks)